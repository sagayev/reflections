How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I just compare two lines that stand side by side. I spot the difference.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    So when there is something wrong I can revert to last working version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    As long as we don't forget to save this the best option. We need to
    separate logical section and then commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Sometimes two or more files are interconnected. Keeping record of each file
    separately doesn't work in this situation.

How can you use the commands git log and git diff to view the history of files?

    With git log I can see the ids of different commits and names for them
    just below. Using git diff I just use git diff previous_id recent_id

How might using version control make you more confident to make changes that
could break something?

    If I knew there is nothing to lose, I can be more brave to edit a code.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it for every code I write..
